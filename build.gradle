plugins {
    id 'java'
    id "jacoco"
    id "org.sonarqube" version "3.5.0.2730"
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation 'org.awaitility:awaitility:4.1.1'
    implementation 'com.googlecode.soundlibs:mp3spi:1.9.5.4'
    implementation 'com.googlecode.soundlibs:jlayer:1.0.1'
    implementation 'com.googlecode.soundlibs:tritonus-share:0.3.7.4'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

plugins.withType(JacocoPlugin) {
    tasks["test"].finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "annotations/**"
            ])
        }))
    }
}

sonar {
    properties {
        property "sonar.projectKey", "DavideTugnoli_OrderAndChaos"
        property "sonar.organization", "davidetugnoli"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'game.Game'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

shadowJar {
    archiveBaseName.set('OrderAndChaos')
    archiveVersion.set('1.0-SNAPSHOT')
    archiveClassifier.set('')
    manifest {
        attributes 'Main-Class': 'game.Game'
    }
}
